# -*- coding: utf-8 -*-
"""PINS-Start.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WMq66Qe55pfc9ScyMlnHwejvfAOlZYyh
"""

#from google.colab import drive
#drive.mount('/content/drive')

import folium
from folium import plugins
import pandas as pd
import webbrowser
import ipywidgets
import os
import json

#from IPython.display import YouTubeVideo
import datetime

"""Main Code :)"""

class navigator:
    def __init__(self):
        self.geoResources = {}
        self.location =(11.023837206537848, 77.00279757528824)
        self.position = 'at'
        self.destination = 'm'

        for root, dirs, files in os.walk('/home/ajaykris/Documents/PINS'):  
            for file in files:
                self.geoResources[file.split('.')[0]] = root+'/'+file

    def changeDestination(self,newDestination):
        self.destination = newDestination
        self.redrawMap()

    def changeStartPoint(self, newStartPoint):
        
        self.position = newStartPoint #does not work yet
        print(f'Selected Start: {newStartPoint}; Selected Target: {self.destination}')
        #self.redrawMap()
        

    def drawPathWay(self,collegeMap):
      
      def switchPosition(coordinate):
        temp = coordinate[0]
        coordinate[0] = coordinate[1]
        coordinate[1] = temp
        return coordinate

      searchString = self.position +'_to_'+ self.destination
      with open(self.geoResources[searchString]) as f:
           testWay = json.load(f)

      for feature in testWay['features']:
        path = feature['geometry']['coordinates']

      finalPath = list(map(switchPosition,path))
      folium.plugins.AntPath(finalPath).add_to(collegeMap)

    def drawBuilding(self,collegeMap):
      hauseOutline = self.geoResources[self.destination]
      folium.GeoJson(hauseOutline, name="geojson").add_to(collegeMap)

    def redrawMap(self):
        #print(f'position {self.position}, destination {self.destination}')
        collegeMap = folium.Map(location = self.location, width = "75%", zoom_start = 17)
        self.drawPathWay(collegeMap)
        self.drawBuilding(collegeMap)
        collegeMap.save("test.html")
        webbrowser.open("test.html")

myNavigator = navigator()

def displayWay(whereTo):
     myNavigator.changeDestination(whereTo)

def changePosition(whereFrom):
    myNavigator.changeStartPoint(whereFrom)

# Destination Selector
#selectHouse_widget=ipywidgets.Select(
    
#options=['a','e','f','g','h','i','quad','m','j','k','y','parking'],
#    value='m',
#    description='Target',
#    disabled=False)

# widget function
def selectHouse(way):
    displayWay(way)
# Position Selector
#electPosition_widget=ipywidgets.Select(
 #   options=['Gate','m','k'],
 #   value='Gate',
 #   description='Start',
 #   disabled=False)

def selectPosition(position):
    if position == 'Gate':
        changePosition('at')
    else:
        changePosition(position)
        
#Initialization   
#ipywidgets.interact(selectPosition, position=selectPosition_widget)
#ipywidgets.interact(selectHouse, way=selectHouse_widget)

#from google.colab import drive
#drive.mount('/content/drive')
houses=['a','c','d','e','f','g','h','i','quad','m','j','k','y','parking']
pos=['Gate','m','k']
print("Positions :",pos)
print("Destinations :",houses)
a=input("Enter postiton :")
b=input("Enter destination :")
if a not in pos or b not in houses :
    print("Invalid input!")
else:
    selectHouse(b)
    selectPosition(a)